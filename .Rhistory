)
}
getSex("800101-2")
getSex("800101-2")
getSex("800101-3")
getSex <- function(jumin){
return(switch(substr(jumin, 8, 8),
'1' = "남",
'2' = "여",
'3' = "남",
'4' = "여",
'5' = "외",
'6' = "외",
"잘못 입력하셨습니다."
)
)
}
getSex("800101-3")
source('C:/Users/Administrator/rlangweekend/Project180707/homework_1.R', encoding = 'UTF-8')
rspGame <- function(x, y){
return(if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
}
comVal <- sample(1:3,1,replace = TRUE)
myVal <- sample(1:3,1,replace = TRUE)
rspGame(comVal, myVal)
rspGame <- function(x, y){
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
)
}
comVal <- sample(1:3,1,replace = TRUE)
myVal <- sample(1:3,1,replace = TRUE)
rspGame(comVal, myVal)
getSex <- function(jumin){
return(switch(substr(jumin, 8, 8),
'1' = "남",
'2' = "여",
'3' = "남",
'4' = "여",
'5' = "외",
'6' = "외",
"잘못 입력하셨습니다."
)
)
}
getSex("800101-3")
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
}
rspGame(3)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
)
}
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
}
rspGame(2)
rspGame <- function(x, y){
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
)
}
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x > y) "왼쪽이 이김" else
if(x == y) "비김" else
if(x < y) "오른쪽이 이김" else
"Error"
)
)
}
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
}
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
}
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
}
rspGame(2)
rspGame <- function(x){
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame(2)
rspGame <- function(){
x <- sample(1:3,1,replace = TRUE)
y <- sample(1:3,1,replace = TRUE)
return(if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
}
rspGame()
rspGame <- function(){
x <- sample(1:3,1,replace = TRUE)
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame <- function(){
return(switch(sample(1:3,1,replace = TRUE)-sample(1:3,1,replace = TRUE),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame <- function(c){
return(switch((sample(1:3,1,replace = TRUE)-sample(1:3,1,replace = TRUE)),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame <- function(c){
return(switch(toString(sample(1:3,1,replace = TRUE)-sample(1:3,1,replace = TRUE)),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame <- function(c){
return(switch(toString((sample(1:3,1,replace = TRUE)-sample(1:3,1,replace = TRUE)),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame <- function(x){
return(switch(toString(sample(1:3,1,replace = TRUE)-x)),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame <- function(x){
return(switch(toString(sample(1:3,1,replace = TRUE)-x),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame <- function(){
x <- sample(1:3,1,replace = TRUE)
y <- sample(1:3,1,replace = TRUE)
return(cat(x,
" VS ",
y,
" --> ",
res <- if(x-y == 1 || x-y == -2) "X가 이김" else
if(x-y == 0) "비김" else
if(x-y == -1 || x-y == 2) "Y가 이김" else
"Error"
)
)
}
rspGame()
rspGame <- function(x){
return(switch(toString(sample(1:3,1,replace = TRUE)-x),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
)
}
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame <- function(x){
num <- sample(1:3,1,replace = TRUE)
return(cat(num, " VS ", x, ' => ', res <- switch(toString(num-x),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'2' = 'LOSE')
))
}
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame <- function(x){
num <- sample(1:3,1,replace = TRUE)
return(cat(num, " VS ", x, ' => ', res <- switch(toString(num-x),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'-2' = 'LOSE')
))
}
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame(3)
rspGame <- function(){
return(switch(toString(sample(1:3,1,replace = TRUE)-sample(1:3,1,replace = TRUE)),
'0' = 'TIE',
'1' = 'WIN',
'2' = 'WIN',
'-1' = 'LOSE',
'-2' = 'LOSE')
)
}
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
rspGame()
